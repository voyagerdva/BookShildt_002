Classfile /E:/__PROJECT__/JAVA/BookShildt_002/out/production/BookShildt_002/e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.class
  Last modified 19 џэт. 2023 у.; size 3465 bytes
  SHA-256 checksum 47739ebacfbad3553a8f780f84b244fb95f4c0ebc1e0adb355a52005e91be764
  Compiled from "StateLooker1.java"
public class e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD.StateLooker1 implements java.lang.Runnable
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1
  super_class: #2                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 4, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Class              #8            // java/util/ArrayList
    #8 = Utf8               java/util/ArrayList
    #9 = Methodref          #7.#3         // java/util/ArrayList."<init>":()V
   #10 = Fieldref           #11.#12       // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.subwriters:Ljava/util/List;
   #11 = Class              #13           // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1
   #12 = NameAndType        #14:#15       // subwriters:Ljava/util/List;
   #13 = Utf8               e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1
   #14 = Utf8               subwriters
   #15 = Utf8               Ljava/util/List;
   #16 = Fieldref           #11.#17       // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.name:Ljava/lang/String;
   #17 = NameAndType        #18:#19       // name:Ljava/lang/String;
   #18 = Utf8               name
   #19 = Utf8               Ljava/lang/String;
   #20 = Class              #21           // java/lang/Thread
   #21 = Utf8               java/lang/Thread
   #22 = Methodref          #20.#23       // java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
   #23 = NameAndType        #5:#24        // "<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
   #24 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V
   #25 = Fieldref           #11.#26       // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.t:Ljava/lang/Thread;
   #26 = NameAndType        #27:#28       // t:Ljava/lang/Thread;
   #27 = Utf8               t
   #28 = Utf8               Ljava/lang/Thread;
   #29 = InvokeDynamic      #0:#30        // #0:accept:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;)Ljava/util/function/Consumer;
   #30 = NameAndType        #31:#32       // accept:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;)Ljava/util/function/Consumer;
   #31 = Utf8               accept
   #32 = Utf8               (Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;)Ljava/util/function/Consumer;
   #33 = InterfaceMethodref #34.#35       // java/util/List.forEach:(Ljava/util/function/Consumer;)V
   #34 = Class              #36           // java/util/List
   #35 = NameAndType        #37:#38       // forEach:(Ljava/util/function/Consumer;)V
   #36 = Utf8               java/util/List
   #37 = Utf8               forEach
   #38 = Utf8               (Ljava/util/function/Consumer;)V
   #39 = Methodref          #20.#40       // java/lang/Thread.start:()V
   #40 = NameAndType        #41:#6        // start:()V
   #41 = Utf8               start
   #42 = Fieldref           #43.#44       // java/lang/System.out:Ljava/io/PrintStream;
   #43 = Class              #45           // java/lang/System
   #44 = NameAndType        #46:#47       // out:Ljava/io/PrintStream;
   #45 = Utf8               java/lang/System
   #46 = Utf8               out
   #47 = Utf8               Ljava/io/PrintStream;
   #48 = Methodref          #49.#50       // java/io/PrintStream.println:()V
   #49 = Class              #51           // java/io/PrintStream
   #50 = NameAndType        #52:#6        // println:()V
   #51 = Utf8               java/io/PrintStream
   #52 = Utf8               println
   #53 = String             #54           // %s was created...\n
   #54 = Utf8               %s was created...\n
   #55 = Methodref          #49.#56       // java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #56 = NameAndType        #57:#58       // printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #57 = Utf8               printf
   #58 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #59 = Long               1000l
   #61 = Methodref          #20.#62       // java/lang/Thread.sleep:(J)V
   #62 = NameAndType        #63:#64       // sleep:(J)V
   #63 = Utf8               sleep
   #64 = Utf8               (J)V
   #65 = Class              #66           // java/lang/InterruptedException
   #66 = Utf8               java/lang/InterruptedException
   #67 = Methodref          #65.#68       // java/lang/InterruptedException.printStackTrace:()V
   #68 = NameAndType        #69:#6        // printStackTrace:()V
   #69 = Utf8               printStackTrace
   #70 = Methodref          #20.#71       // java/lang/Thread.getState:()Ljava/lang/Thread$State;
   #71 = NameAndType        #72:#73       // getState:()Ljava/lang/Thread$State;
   #72 = Utf8               getState
   #73 = Utf8               ()Ljava/lang/Thread$State;
   #74 = InvokeDynamic      #1:#75        // #1:makeConcatWithConstants:(Ljava/lang/Thread;Ljava/lang/Thread$State;)Ljava/lang/String;
   #75 = NameAndType        #76:#77       // makeConcatWithConstants:(Ljava/lang/Thread;Ljava/lang/Thread$State;)Ljava/lang/String;
   #76 = Utf8               makeConcatWithConstants
   #77 = Utf8               (Ljava/lang/Thread;Ljava/lang/Thread$State;)Ljava/lang/String;
   #78 = Methodref          #49.#79       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #79 = NameAndType        #52:#80       // println:(Ljava/lang/String;)V
   #80 = Utf8               (Ljava/lang/String;)V
   #81 = InvokeDynamic      #2:#82        // #2:accept:()Ljava/util/function/Consumer;
   #82 = NameAndType        #31:#83       // accept:()Ljava/util/function/Consumer;
   #83 = Utf8               ()Ljava/util/function/Consumer;
   #84 = String             #85           // %s : %s\n
   #85 = Utf8               %s : %s\n
   #86 = Fieldref           #87.#26       // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1.t:Ljava/lang/Thread;
   #87 = Class              #88           // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1
   #88 = Utf8               e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1
   #89 = Methodref          #20.#90       // java/lang/Thread.getName:()Ljava/lang/String;
   #90 = NameAndType        #91:#92       // getName:()Ljava/lang/String;
   #91 = Utf8               getName
   #92 = Utf8               ()Ljava/lang/String;
   #93 = InterfaceMethodref #34.#94       // java/util/List.add:(Ljava/lang/Object;)Z
   #94 = NameAndType        #95:#96       // add:(Ljava/lang/Object;)Z
   #95 = Utf8               add
   #96 = Utf8               (Ljava/lang/Object;)Z
   #97 = String             #98           // from constructor StateLooker1 : %s : %s\n
   #98 = Utf8               from constructor StateLooker1 : %s : %s\n
   #99 = Class              #100          // java/lang/Runnable
  #100 = Utf8               java/lang/Runnable
  #101 = Utf8               Signature
  #102 = Utf8               Ljava/util/List<Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;>;
  #103 = Utf8               (Ljava/lang/String;Ljava/util/List;)V
  #104 = Utf8               Code
  #105 = Utf8               LineNumberTable
  #106 = Utf8               LocalVariableTable
  #107 = Utf8               this
  #108 = Utf8               Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;
  #109 = Utf8               n
  #110 = Utf8               writer
  #111 = Utf8               LocalVariableTypeTable
  #112 = Utf8               (Ljava/lang/String;Ljava/util/List<Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;>;)V
  #113 = Utf8               run
  #114 = Utf8               e
  #115 = Utf8               Ljava/lang/InterruptedException;
  #116 = Utf8               StackMapTable
  #117 = Utf8               lambda$run$1
  #118 = Utf8               (Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #119 = Utf8               s
  #120 = Utf8               Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;
  #121 = Utf8               lambda$new$0
  #122 = Utf8               w
  #123 = Utf8               SourceFile
  #124 = Utf8               StateLooker1.java
  #125 = Utf8               BootstrapMethods
  #126 = MethodHandle       6:#127        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #127 = Methodref          #128.#129     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #128 = Class              #130          // java/lang/invoke/LambdaMetafactory
  #129 = NameAndType        #131:#132     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #130 = Utf8               java/lang/invoke/LambdaMetafactory
  #131 = Utf8               metafactory
  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #133 = MethodType         #134          //  (Ljava/lang/Object;)V
  #134 = Utf8               (Ljava/lang/Object;)V
  #135 = MethodHandle       5:#136        // REF_invokeVirtual e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$new$0:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #136 = Methodref          #11.#137      // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$new$0:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #137 = NameAndType        #121:#118     // lambda$new$0:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #138 = MethodType         #118          //  (Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #139 = MethodHandle       6:#140        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #140 = Methodref          #141.#142     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #141 = Class              #143          // java/lang/invoke/StringConcatFactory
  #142 = NameAndType        #76:#144      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #143 = Utf8               java/lang/invoke/StringConcatFactory
  #144 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #145 = String             #146          // \u0001 : \u0001
  #146 = Utf8               \u0001 : \u0001
  #147 = MethodHandle       6:#148        // REF_invokeStatic e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$run$1:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #148 = Methodref          #11.#149      // e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$run$1:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #149 = NameAndType        #117:#118     // lambda$run$1:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  #150 = Utf8               InnerClasses
  #151 = Class              #152          // java/lang/Thread$State
  #152 = Utf8               java/lang/Thread$State
  #153 = Utf8               State
  #154 = Class              #155          // java/lang/invoke/MethodHandles$Lookup
  #155 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #156 = Class              #157          // java/lang/invoke/MethodHandles
  #157 = Utf8               java/lang/invoke/MethodHandles
  #158 = Utf8               Lookup
{
  java.lang.Thread t;
    descriptor: Ljava/lang/Thread;
    flags: (0x0000)

  java.lang.String name;
    descriptor: Ljava/lang/String;
    flags: (0x0000)

  java.util.List<e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD.Writer1> subwriters;
    descriptor: Ljava/util/List;
    flags: (0x0000)
    Signature: #102                         // Ljava/util/List<Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;>;

  e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD.StateLooker1(java.lang.String, java.util.List<e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD.Writer1>);
    descriptor: (Ljava/lang/String;Ljava/util/List;)V
    flags: (0x0000)
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #7                  // class java/util/ArrayList
         8: dup
         9: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
        12: putfield      #10                 // Field subwriters:Ljava/util/List;
        15: aload_0
        16: aload_1
        17: putfield      #16                 // Field name:Ljava/lang/String;
        20: aload_0
        21: new           #20                 // class java/lang/Thread
        24: dup
        25: aload_0
        26: aload_0
        27: getfield      #16                 // Field name:Ljava/lang/String;
        30: invokespecial #22                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
        33: putfield      #25                 // Field t:Ljava/lang/Thread;
        36: aload_2
        37: aload_0
        38: invokedynamic #29,  0             // InvokeDynamic #0:accept:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;)Ljava/util/function/Consumer;
        43: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        48: aload_0
        49: getfield      #25                 // Field t:Ljava/lang/Thread;
        52: invokevirtual #39                 // Method java/lang/Thread.start:()V
        55: getstatic     #42                 // Field java/lang/System.out:Ljava/io/PrintStream;
        58: invokevirtual #48                 // Method java/io/PrintStream.println:()V
        61: getstatic     #42                 // Field java/lang/System.out:Ljava/io/PrintStream;
        64: ldc           #53                 // String %s was created...\n
        66: iconst_1
        67: anewarray     #2                  // class java/lang/Object
        70: dup
        71: iconst_0
        72: aload_0
        73: getfield      #25                 // Field t:Ljava/lang/Thread;
        76: aastore
        77: invokevirtual #55                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        80: pop
        81: getstatic     #42                 // Field java/lang/System.out:Ljava/io/PrintStream;
        84: invokevirtual #48                 // Method java/io/PrintStream.println:()V
        87: return
      LineNumberTable:
        line 12: 0
        line 9: 4
        line 13: 15
        line 14: 20
        line 16: 36
        line 21: 48
        line 22: 55
        line 23: 61
        line 24: 81
        line 25: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      88     0  this   Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;
            0      88     1     n   Ljava/lang/String;
            0      88     2 writer   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      88     2 writer   Ljava/util/List<Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;>;
    Signature: #112                         // (Ljava/lang/String;Ljava/util/List<Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;>;)V

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: ldc2_w        #59                 // long 1000l
         3: invokestatic  #61                 // Method java/lang/Thread.sleep:(J)V
         6: goto          14
         9: astore_1
        10: aload_1
        11: invokevirtual #67                 // Method java/lang/InterruptedException.printStackTrace:()V
        14: getstatic     #42                 // Field java/lang/System.out:Ljava/io/PrintStream;
        17: aload_0
        18: getfield      #25                 // Field t:Ljava/lang/Thread;
        21: aload_0
        22: getfield      #25                 // Field t:Ljava/lang/Thread;
        25: invokevirtual #70                 // Method java/lang/Thread.getState:()Ljava/lang/Thread$State;
        28: invokedynamic #74,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/Thread;Ljava/lang/Thread$State;)Ljava/lang/String;
        33: invokevirtual #78                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        36: aload_0
        37: getfield      #10                 // Field subwriters:Ljava/util/List;
        40: invokedynamic #81,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
        45: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        50: return
      Exception table:
         from    to  target type
             0     6     9   Class java/lang/InterruptedException
      LineNumberTable:
        line 31: 0
        line 34: 6
        line 32: 9
        line 33: 10
        line 35: 14
        line 37: 36
        line 51: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10       4     1     e   Ljava/lang/InterruptedException;
            0      51     0  this   Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1;
      StackMapTable: number_of_entries = 2
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
        frame_type = 4 /* same */
}
SourceFile: "StateLooker1.java"
BootstrapMethods:
  0: #126 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #133 (Ljava/lang/Object;)V
      #135 REF_invokeVirtual e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$new$0:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
      #138 (Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
  1: #139 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #145 \u0001 : \u0001
  2: #126 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #133 (Ljava/lang/Object;)V
      #147 REF_invokeStatic e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/StateLooker1.lambda$run$1:(Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
      #138 (Le0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD/Writer1;)V
InnerClasses:
  public static final #153= #151 of #20;  // State=class java/lang/Thread$State of class java/lang/Thread
  public static final #158= #154 of #156; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
#############################################################################################
package e0068_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD;

import java.util.ArrayList;
import java.util.List;

public class StateLooker1 implements Runnable {
    Thread t;
    String name;
    List<Writer1> subwriters = new ArrayList<>();


    StateLooker1(String n, List<Writer1> writer) {
        name = n;
        t = new Thread(this, name);

        writer.forEach(w -> {
            subwriters.add(w);
            System.out.printf("from constructor StateLooker1 : %s : %s\n", w.t.getName(), w.t.getState());
        });

        t.start();
        System.out.println();
        System.out.printf("%s was created...\n", t);
        System.out.println();
    }


    @Override
    public void run() {
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println(t + " : " + t.getState());

        subwriters.forEach(s -> {
            System.out.printf("%s : %s\n", s.t.getName(), s.t.getState());
        });
//        while (true) {
//            try {
//                wait();
//            } catch (InterruptedException e) {
//                e.printStackTrace();
//            }
//
//            System.out.printf("# thread %s : ");
//
//
//        }
    }
}
---------------------------------------------------------------------------------------------
