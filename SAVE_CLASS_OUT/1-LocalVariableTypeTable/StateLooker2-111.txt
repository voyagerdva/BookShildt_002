Classfile /E:/__PROJECT__/JAVA/BookShildt_002/out/production/BookShildt_002/e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.class
  Last modified 19 џэт. 2023 у.; size 3215 bytes
  SHA-256 checksum 910c764c88ac471d62a6b7d8dc99a60e0bfb81055aec030f8341746cac7a6b00
  Compiled from "StateLooker2.java"
public class e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1.StateLooker2 extends java.lang.Thread
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2
  super_class: #2                         // java/lang/Thread
  interfaces: 0, fields: 3, methods: 4, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Thread."<init>":()V
    #2 = Class              #4            // java/lang/Thread
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Thread
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Class              #8            // java/util/ArrayList
    #8 = Utf8               java/util/ArrayList
    #9 = Methodref          #7.#3         // java/util/ArrayList."<init>":()V
   #10 = Fieldref           #11.#12       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.subscribers:Ljava/util/List;
   #11 = Class              #13           // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2
   #12 = NameAndType        #14:#15       // subscribers:Ljava/util/List;
   #13 = Utf8               e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2
   #14 = Utf8               subscribers
   #15 = Utf8               Ljava/util/List;
   #16 = Fieldref           #11.#17       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.monitor:Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
   #17 = NameAndType        #18:#19       // monitor:Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
   #18 = Utf8               monitor
   #19 = Utf8               Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
   #20 = Fieldref           #11.#21       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.name:Ljava/lang/String;
   #21 = NameAndType        #22:#23       // name:Ljava/lang/String;
   #22 = Utf8               name
   #23 = Utf8               Ljava/lang/String;
   #24 = Methodref          #11.#25       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.setName:(Ljava/lang/String;)V
   #25 = NameAndType        #26:#27       // setName:(Ljava/lang/String;)V
   #26 = Utf8               setName
   #27 = Utf8               (Ljava/lang/String;)V
   #28 = InvokeDynamic      #0:#29        // #0:accept:(Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
   #29 = NameAndType        #30:#31       // accept:(Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
   #30 = Utf8               accept
   #31 = Utf8               (Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
   #32 = InterfaceMethodref #33.#34       // java/util/List.forEach:(Ljava/util/function/Consumer;)V
   #33 = Class              #35           // java/util/List
   #34 = NameAndType        #36:#37       // forEach:(Ljava/util/function/Consumer;)V
   #35 = Utf8               java/util/List
   #36 = Utf8               forEach
   #37 = Utf8               (Ljava/util/function/Consumer;)V
   #38 = Fieldref           #39.#40       // java/lang/System.out:Ljava/io/PrintStream;
   #39 = Class              #41           // java/lang/System
   #40 = NameAndType        #42:#43       // out:Ljava/io/PrintStream;
   #41 = Utf8               java/lang/System
   #42 = Utf8               out
   #43 = Utf8               Ljava/io/PrintStream;
   #44 = String             #45           // %s : %s : %s  was created...\n
   #45 = Utf8               %s : %s : %s  was created...\n
   #46 = Class              #47           // java/lang/Object
   #47 = Utf8               java/lang/Object
   #48 = Methodref          #11.#49       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.getName:()Ljava/lang/String;
   #49 = NameAndType        #50:#51       // getName:()Ljava/lang/String;
   #50 = Utf8               getName
   #51 = Utf8               ()Ljava/lang/String;
   #52 = Methodref          #11.#53       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.getPriority:()I
   #53 = NameAndType        #54:#55       // getPriority:()I
   #54 = Utf8               getPriority
   #55 = Utf8               ()I
   #56 = Methodref          #57.#58       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #57 = Class              #59           // java/lang/Integer
   #58 = NameAndType        #60:#61       // valueOf:(I)Ljava/lang/Integer;
   #59 = Utf8               java/lang/Integer
   #60 = Utf8               valueOf
   #61 = Utf8               (I)Ljava/lang/Integer;
   #62 = Methodref          #11.#63       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.getState:()Ljava/lang/Thread$State;
   #63 = NameAndType        #64:#65       // getState:()Ljava/lang/Thread$State;
   #64 = Utf8               getState
   #65 = Utf8               ()Ljava/lang/Thread$State;
   #66 = Methodref          #67.#68       // java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #67 = Class              #69           // java/io/PrintStream
   #68 = NameAndType        #70:#71       // printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #69 = Utf8               java/io/PrintStream
   #70 = Utf8               printf
   #71 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
   #72 = InvokeDynamic      #1:#29        // #1:accept:(Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
   #73 = Methodref          #74.#75       // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor.sayWait:()V
   #74 = Class              #76           // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor
   #75 = NameAndType        #77:#6        // sayWait:()V
   #76 = Utf8               e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor
   #77 = Utf8               sayWait
   #78 = Methodref          #2.#79        // java/lang/Thread.sleep:(J)V
   #79 = NameAndType        #80:#81       // sleep:(J)V
   #80 = Utf8               sleep
   #81 = Utf8               (J)V
   #82 = Class              #83           // java/lang/InterruptedException
   #83 = Utf8               java/lang/InterruptedException
   #84 = Methodref          #82.#85       // java/lang/InterruptedException.printStackTrace:()V
   #85 = NameAndType        #86:#6        // printStackTrace:()V
   #86 = Utf8               printStackTrace
   #87 = String             #88           // %s sais: %s , %s\n
   #88 = Utf8               %s sais: %s , %s\n
   #89 = Methodref          #2.#90        // java/lang/Thread.currentThread:()Ljava/lang/Thread;
   #90 = NameAndType        #91:#92       // currentThread:()Ljava/lang/Thread;
   #91 = Utf8               currentThread
   #92 = Utf8               ()Ljava/lang/Thread;
   #93 = Methodref          #2.#49        // java/lang/Thread.getName:()Ljava/lang/String;
   #94 = Methodref          #2.#63        // java/lang/Thread.getState:()Ljava/lang/Thread$State;
   #95 = InterfaceMethodref #33.#96       // java/util/List.add:(Ljava/lang/Object;)Z
   #96 = NameAndType        #97:#98       // add:(Ljava/lang/Object;)Z
   #97 = Utf8               add
   #98 = Utf8               (Ljava/lang/Object;)Z
   #99 = String             #100          // from constructor StateLooker1 : %s : %s\n
  #100 = Utf8               from constructor StateLooker1 : %s : %s\n
  #101 = Utf8               Signature
  #102 = Utf8               Ljava/util/List<Ljava/lang/Thread;>;
  #103 = Utf8               (Ljava/lang/String;Ljava/util/List;Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;)V
  #104 = Utf8               Code
  #105 = Utf8               LineNumberTable
  #106 = Utf8               LocalVariableTable
  #107 = Utf8               this
  #108 = Utf8               Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;
  #109 = Utf8               n
  #110 = Utf8               threads
  #111 = Utf8               m
  #112 = Utf8               LocalVariableTypeTable
  #113 = Utf8               (Ljava/lang/String;Ljava/util/List<Ljava/lang/Thread;>;Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;)V
  #114 = Utf8               run
  #115 = Utf8               e
  #116 = Utf8               Ljava/lang/InterruptedException;
  #117 = Utf8               StackMapTable
  #118 = Utf8               lambda$run$1
  #119 = Utf8               (Ljava/lang/Thread;)V
  #120 = Utf8               s
  #121 = Utf8               Ljava/lang/Thread;
  #122 = Utf8               lambda$new$0
  #123 = Utf8               th
  #124 = Utf8               SourceFile
  #125 = Utf8               StateLooker2.java
  #126 = Utf8               BootstrapMethods
  #127 = MethodHandle       6:#128        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #128 = Methodref          #129.#130     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #129 = Class              #131          // java/lang/invoke/LambdaMetafactory
  #130 = NameAndType        #132:#133     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #131 = Utf8               java/lang/invoke/LambdaMetafactory
  #132 = Utf8               metafactory
  #133 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #134 = MethodType         #135          //  (Ljava/lang/Object;)V
  #135 = Utf8               (Ljava/lang/Object;)V
  #136 = MethodHandle       5:#137        // REF_invokeVirtual e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$new$0:(Ljava/lang/Thread;)V
  #137 = Methodref          #11.#138      // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$new$0:(Ljava/lang/Thread;)V
  #138 = NameAndType        #122:#119     // lambda$new$0:(Ljava/lang/Thread;)V
  #139 = MethodType         #119          //  (Ljava/lang/Thread;)V
  #140 = MethodHandle       5:#141        // REF_invokeVirtual e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$run$1:(Ljava/lang/Thread;)V
  #141 = Methodref          #11.#142      // e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$run$1:(Ljava/lang/Thread;)V
  #142 = NameAndType        #118:#119     // lambda$run$1:(Ljava/lang/Thread;)V
  #143 = Utf8               InnerClasses
  #144 = Class              #145          // java/lang/Thread$State
  #145 = Utf8               java/lang/Thread$State
  #146 = Utf8               State
  #147 = Class              #148          // java/lang/invoke/MethodHandles$Lookup
  #148 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #149 = Class              #150          // java/lang/invoke/MethodHandles
  #150 = Utf8               java/lang/invoke/MethodHandles
  #151 = Utf8               Lookup
{
  java.lang.String name;
    descriptor: Ljava/lang/String;
    flags: (0x0000)

  java.util.List<java.lang.Thread> subscribers;
    descriptor: Ljava/util/List;
    flags: (0x0000)
    Signature: #102                         // Ljava/util/List<Ljava/lang/Thread;>;

  e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1.Monitor monitor;
    descriptor: Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
    flags: (0x0000)

  e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1.StateLooker2(java.lang.String, java.util.List<java.lang.Thread>, e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1.Monitor);
    descriptor: (Ljava/lang/String;Ljava/util/List;Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;)V
    flags: (0x0000)
    Code:
      stack=6, locals=4, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
         4: aload_0
         5: new           #7                  // class java/util/ArrayList
         8: dup
         9: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
        12: putfield      #10                 // Field subscribers:Ljava/util/List;
        15: aload_0
        16: aload_3
        17: putfield      #16                 // Field monitor:Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
        20: aload_0
        21: aload_1
        22: putfield      #20                 // Field name:Ljava/lang/String;
        25: aload_0
        26: aload_0
        27: getfield      #20                 // Field name:Ljava/lang/String;
        30: invokevirtual #24                 // Method setName:(Ljava/lang/String;)V
        33: aload_2
        34: aload_0
        35: invokedynamic #28,  0             // InvokeDynamic #0:accept:(Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
        40: invokeinterface #32,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        45: getstatic     #38                 // Field java/lang/System.out:Ljava/io/PrintStream;
        48: ldc           #44                 // String %s : %s : %s  was created...\n
        50: iconst_3
        51: anewarray     #46                 // class java/lang/Object
        54: dup
        55: iconst_0
        56: aload_0
        57: invokevirtual #48                 // Method getName:()Ljava/lang/String;
        60: aastore
        61: dup
        62: iconst_1
        63: aload_0
        64: invokevirtual #52                 // Method getPriority:()I
        67: invokestatic  #56                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        70: aastore
        71: dup
        72: iconst_2
        73: aload_0
        74: invokevirtual #62                 // Method getState:()Ljava/lang/Thread$State;
        77: aastore
        78: invokevirtual #66                 // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        81: pop
        82: return
      LineNumberTable:
        line 12: 0
        line 8: 4
        line 13: 15
        line 14: 20
        line 15: 25
        line 16: 33
        line 21: 45
        line 22: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      83     0  this   Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;
            0      83     1     n   Ljava/lang/String;
            0      83     2 threads   Ljava/util/List;
            0      83     3     m   Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      83     2 threads   Ljava/util/List<Ljava/lang/Thread;>;
    Signature: #113                         // (Ljava/lang/String;Ljava/util/List<Ljava/lang/Thread;>;Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;)V

  public void run();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getfield      #10                 // Field subscribers:Ljava/util/List;
         4: aload_0
         5: invokedynamic #72,  0             // InvokeDynamic #1:accept:(Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;)Ljava/util/function/Consumer;
        10: invokeinterface #32,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        15: aload_0
        16: getfield      #16                 // Field monitor:Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor;
        19: invokevirtual #73                 // Method e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/Monitor.sayWait:()V
        22: lconst_1
        23: invokestatic  #78                 // Method java/lang/Thread.sleep:(J)V
        26: goto          0
        29: astore_1
        30: aload_1
        31: invokevirtual #84                 // Method java/lang/InterruptedException.printStackTrace:()V
        34: goto          0
      Exception table:
         from    to  target type
            22    26    29   Class java/lang/InterruptedException
      LineNumberTable:
        line 28: 0
        line 33: 15
        line 35: 22
        line 38: 26
        line 36: 29
        line 37: 30
        line 38: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30       4     1     e   Ljava/lang/InterruptedException;
            0      37     0  this   Le0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2;
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
}
SourceFile: "StateLooker2.java"
BootstrapMethods:
  0: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #134 (Ljava/lang/Object;)V
      #136 REF_invokeVirtual e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$new$0:(Ljava/lang/Thread;)V
      #139 (Ljava/lang/Thread;)V
  1: #127 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #134 (Ljava/lang/Object;)V
      #140 REF_invokeVirtual e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1/StateLooker2.lambda$run$1:(Ljava/lang/Thread;)V
      #139 (Ljava/lang/Thread;)V
InnerClasses:
  public static final #146= #144 of #2;   // State=class java/lang/Thread$State of class java/lang/Thread
  public static final #151= #147 of #149; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
#############################################################################################
package e0069_Threads_print_list_TRANSFER_THREADS_LIST_TO_THREAD_1;

import java.util.ArrayList;
import java.util.List;

public class StateLooker2 extends Thread{
    String name;
    List<Thread> subscribers = new ArrayList<>();
    Monitor monitor;


    StateLooker2(String n, List<Thread> threads, Monitor m) {
        monitor = m;
        name = n;
        setName(name);
        threads.forEach(th -> {
            subscribers.add(th);
            System.out.printf("from constructor StateLooker1 : %s : %s\n", th.getName(), th.getState());
        });

        System.out.printf("%s : %s : %s  was created...\n", getName(), getPriority(), getState());
    }


    @Override
    public void run() {
        while (true) {
            subscribers.forEach(s -> {
                System.out.printf("%s sais: %s , %s\n", Thread.currentThread().getName(), s.getName(), s.getState());
                System.out.printf("%s sais: %s , %s\n", name, s.getName(), s.getState());
            });

            monitor.sayWait();
            try {
                Thread.sleep(1);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }



//        try {
//            Thread.sleep(500);
//        } catch (InterruptedException e) {
//            e.printStackTrace();
//        }
//        System.out.printf("%s : %s : %s\n", getName(), getPriority(), getState());
//        System.out.printf("%s : %s : %s\n", name, getPriority(), getState());
//
//

//        while (true) {
//            try {
//                wait();
//            } catch (InterruptedException e) {
//                e.printStackTrace();
//            }
//
//            System.out.printf("# thread %s : ");
//
//
//        }
    }
}
---------------------------------------------------------------------------------------------
