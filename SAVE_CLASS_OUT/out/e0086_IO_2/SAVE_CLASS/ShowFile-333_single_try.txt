Classfile /E:/__PROJECT__/JAVA/BookShildt_002/out/production/BookShildt_002/e0086_IO_2/ShowFile.class
  Last modified 6 февр. 2023 г.; size 1577 bytes
  SHA-256 checksum e529554ef73bd265dab5ee0d2672fdfbdcdfb17e96ba382f244ffd862fa5430b
  Compiled from "ShowFile.java"
public class e0086_IO_2.ShowFile
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #45                         // e0086_IO_2/ShowFile
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = String             #8             // e:\\__PROJECT__\\JAVA\\BookShildt_002\\src\\e0086_IO_2\\TEST.txt
   #8 = Utf8               e:\\__PROJECT__\\JAVA\\BookShildt_002\\src\\e0086_IO_2\\TEST.txt
   #9 = Fieldref           #10.#11        // java/lang/System.out:Ljava/io/PrintStream;
  #10 = Class              #12            // java/lang/System
  #11 = NameAndType        #13:#14        // out:Ljava/io/PrintStream;
  #12 = Utf8               java/lang/System
  #13 = Utf8               out
  #14 = Utf8               Ljava/io/PrintStream;
  #15 = String             #16            // USING: ShowFile file_name
  #16 = Utf8               USING: ShowFile file_name
  #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #18 = Class              #20            // java/io/PrintStream
  #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
  #20 = Utf8               java/io/PrintStream
  #21 = Utf8               println
  #22 = Utf8               (Ljava/lang/String;)V
  #23 = Class              #24            // java/io/FileInputStream
  #24 = Utf8               java/io/FileInputStream
  #25 = Methodref          #23.#26        // java/io/FileInputStream."<init>":(Ljava/lang/String;)V
  #26 = NameAndType        #5:#22         // "<init>":(Ljava/lang/String;)V
  #27 = Methodref          #23.#28        // java/io/FileInputStream.read:()I
  #28 = NameAndType        #29:#30        // read:()I
  #29 = Utf8               read
  #30 = Utf8               ()I
  #31 = Methodref          #18.#32        // java/io/PrintStream.println:(C)V
  #32 = NameAndType        #21:#33        // println:(C)V
  #33 = Utf8               (C)V
  #34 = Methodref          #23.#35        // java/io/FileInputStream.close:()V
  #35 = NameAndType        #36:#6         // close:()V
  #36 = Utf8               close
  #37 = Class              #38            // java/io/IOException
  #38 = Utf8               java/io/IOException
  #39 = Methodref          #37.#40        // java/io/IOException.printStackTrace:()V
  #40 = NameAndType        #41:#6         // printStackTrace:()V
  #41 = Utf8               printStackTrace
  #42 = Class              #43            // java/io/FileNotFoundException
  #43 = Utf8               java/io/FileNotFoundException
  #44 = Methodref          #42.#40        // java/io/FileNotFoundException.printStackTrace:()V
  #45 = Class              #46            // e0086_IO_2/ShowFile
  #46 = Utf8               e0086_IO_2/ShowFile
  #47 = Utf8               Code
  #48 = Utf8               LineNumberTable
  #49 = Utf8               LocalVariableTable
  #50 = Utf8               this
  #51 = Utf8               Le0086_IO_2/ShowFile;
  #52 = Utf8               main
  #53 = Utf8               ([Ljava/lang/String;)V
  #54 = Utf8               e
  #55 = Utf8               Ljava/io/IOException;
  #56 = Utf8               i
  #57 = Utf8               I
  #58 = Utf8               Ljava/io/FileNotFoundException;
  #59 = Utf8               args
  #60 = Utf8               [Ljava/lang/String;
  #61 = Utf8               fin
  #62 = Utf8               Ljava/io/FileInputStream;
  #63 = Utf8               filename
  #64 = Utf8               Ljava/lang/String;
  #65 = Utf8               StackMapTable
  #66 = Class              #67            // java/lang/String
  #67 = Utf8               java/lang/String
  #68 = Class              #60            // "[Ljava/lang/String;"
  #69 = Class              #70            // java/lang/Throwable
  #70 = Utf8               java/lang/Throwable
  #71 = Utf8               SourceFile
  #72 = Utf8               ShowFile.java
{
  public e0086_IO_2.ShowFile();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Le0086_IO_2/ShowFile;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=7, args_size=1
         0: aconst_null
         1: astore_2
         2: ldc           #7                  // String e:\\__PROJECT__\\JAVA\\BookShildt_002\\src\\e0086_IO_2\\TEST.txt
         4: astore_3
         5: aload_3
         6: ifnonnull     18
         9: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        12: ldc           #15                 // String USING: ShowFile file_name
        14: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        17: return
        18: new           #23                 // class java/io/FileInputStream
        21: dup
        22: aload_3
        23: invokespecial #25                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
        26: astore_2
        27: aload_2
        28: invokevirtual #27                 // Method java/io/FileInputStream.read:()I
        31: istore_1
        32: iload_1
        33: iconst_m1
        34: if_icmpeq     45
        37: getstatic     #9                  // Field java/lang/System.out:Ljava/io/PrintStream;
        40: iload_1
        41: i2c
        42: invokevirtual #31                 // Method java/io/PrintStream.println:(C)V
        45: iload_1
        46: iconst_m1
        47: if_icmpne     27
        50: aload_2
        51: ifnull        58
        54: aload_2
        55: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
        58: goto          150
        61: astore        4
        63: aload         4
        65: invokevirtual #39                 // Method java/io/IOException.printStackTrace:()V
        68: goto          150
        71: astore        4
        73: aload         4
        75: invokevirtual #44                 // Method java/io/FileNotFoundException.printStackTrace:()V
        78: aload_2
        79: ifnull        86
        82: aload_2
        83: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
        86: goto          150
        89: astore        4
        91: aload         4
        93: invokevirtual #39                 // Method java/io/IOException.printStackTrace:()V
        96: goto          150
        99: astore        4
       101: aload         4
       103: invokevirtual #39                 // Method java/io/IOException.printStackTrace:()V
       106: aload_2
       107: ifnull        114
       110: aload_2
       111: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
       114: goto          150
       117: astore        4
       119: aload         4
       121: invokevirtual #39                 // Method java/io/IOException.printStackTrace:()V
       124: goto          150
       127: astore        5
       129: aload_2
       130: ifnull        137
       133: aload_2
       134: invokevirtual #34                 // Method java/io/FileInputStream.close:()V
       137: goto          147
       140: astore        6
       142: aload         6
       144: invokevirtual #39                 // Method java/io/IOException.printStackTrace:()V
       147: aload         5
       149: athrow
       150: return
      Exception table:
         from    to  target type
            50    58    61   Class java/io/IOException
            18    50    71   Class java/io/FileNotFoundException
            78    86    89   Class java/io/IOException
            18    50    99   Class java/io/IOException
           106   114   117   Class java/io/IOException
            18    50   127   any
            71    78   127   any
            99   106   127   any
           129   137   140   Class java/io/IOException
           127   129   127   any
      LineNumberTable:
        line 10: 0
        line 11: 2
        line 13: 5
        line 14: 9
        line 15: 17
        line 19: 18
        line 22: 27
        line 23: 32
        line 24: 37
        line 26: 45
        line 34: 50
        line 35: 54
        line 39: 58
        line 37: 61
        line 38: 63
        line 40: 68
        line 28: 71
        line 29: 73
        line 34: 78
        line 35: 82
        line 39: 86
        line 37: 89
        line 38: 91
        line 40: 96
        line 30: 99
        line 31: 101
        line 34: 106
        line 35: 110
        line 39: 114
        line 37: 117
        line 38: 119
        line 40: 124
        line 33: 127
        line 34: 129
        line 35: 133
        line 39: 137
        line 37: 140
        line 38: 142
        line 40: 147
        line 42: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           63       5     4     e   Ljava/io/IOException;
           32      39     1     i   I
           73       5     4     e   Ljava/io/FileNotFoundException;
           91       5     4     e   Ljava/io/IOException;
          101       5     4     e   Ljava/io/IOException;
          119       5     4     e   Ljava/io/IOException;
          142       5     6     e   Ljava/io/IOException;
            0     151     0  args   [Ljava/lang/String;
            2     149     2   fin   Ljava/io/FileInputStream;
            5     146     3 filename   Ljava/lang/String;
      StackMapTable: number_of_entries = 16
        frame_type = 254 /* append */
          offset_delta = 18
          locals = [ top, class java/io/FileInputStream, class java/lang/String ]
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class "[Ljava/lang/String;", int, class java/io/FileInputStream, class java/lang/String ]
          stack = []
        frame_type = 12 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class "[Ljava/lang/String;", top, class java/io/FileInputStream, class java/lang/String ]
          stack = [ class java/io/FileNotFoundException ]
        frame_type = 14 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 14 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 9
          locals = [ top, class java/lang/Throwable ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 6 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
}
SourceFile: "ShowFile.java"
#############################################################################################
package e0086_IO_2;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class ShowFile {
    public static void main(String[] args) {
        int i;
        FileInputStream fin = null;
        String filename = "e:\\__PROJECT__\\JAVA\\BookShildt_002\\src\\e0086_IO_2\\TEST.txt";

        if (filename == null) {
            System.out.println("USING: ShowFile file_name");
            return;
        }

        try {
            fin = new FileInputStream(filename);

            do {
                i = fin.read();
                if (i != -1) {
                    System.out.println((char) i);
                }
            } while (i != -1);

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (fin != null) {
                    fin.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }
}
---------------------------------------------------------------------------------------------
